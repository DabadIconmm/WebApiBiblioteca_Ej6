::1 - /swagger/index.html
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"Ejercicio Sesi\u00F3n 4 v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

::1 - /swagger/v1/swagger.json
{
  "openapi": "3.0.1",
  "info": {
    "title": "Ejercicio Sesi√≥n 4",
    "version": "1.0"
  },
  "paths": {
    "/api/EditorialController/ListEditoriales": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/contiene": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "contiene",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/getEditoriales/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/editorialeslibrosdto/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController": {
      "post": {
        "tags": [
          "Editorial"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/editoriallibros": {
      "post": {
        "tags": [
          "Editorial"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/Logico/{id}": {
      "delete": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/Restaurar/{id}": {
      "put": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DTOEditorialLibro": {
        "type": "object",
        "properties": {
          "idEditorial": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "libros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOLibroItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTOLibroItem": {
        "type": "object",
        "properties": {
          "idLibro": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "paginas": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Editorial": {
        "required": [
          "nombre"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "eliminado": {
            "type": "boolean"
          },
          "libros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Libro"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Libro": {
        "required": [
          "titulo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "paginas": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "editorialId": {
            "type": "integer",
            "format": "int32"
          },
          "editorial": {
            "$ref": "#/components/schemas/Editorial"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
::1 - /swagger/index.html
<!-- HTML for static distribution bundle build -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Swagger UI</title>
    <link rel="stylesheet" type="text/css" href="./swagger-ui.css">
    <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
    <style>

        html {
            box-sizing: border-box;
            overflow: -moz-scrollbars-vertical;
            overflow-y: scroll;
        }

        *,
        *:before,
        *:after {
            box-sizing: inherit;
        }

        body {
            margin: 0;
            background: #fafafa;
        }
    </style>
    
</head>

<body>
    <div id="swagger-ui"></div>

    <!-- Workaround for https://github.com/swagger-api/swagger-editor/issues/1371 -->
    <script>
        if (window.navigator.userAgent.indexOf("Edge") > -1) {
            console.log("Removing native Edge fetch in favor of swagger-ui's polyfill")
            window.fetch = undefined;
        }
    </script>

    <script src="./swagger-ui-bundle.js"></script>
    <script src="./swagger-ui-standalone-preset.js"></script>
    <script>
        /* Source: https://gist.github.com/lamberta/3768814
         * Parse a string function definition and return a function object. Does not use eval.
         * @param {string} str
         * @return {function}
         *
         * Example:
         *  var f = function (x, y) { return x * y; };
         *  var g = parseFunction(f.toString());
         *  g(33, 3); //=> 99
         */
        function parseFunction(str) {
            if (!str) return void (0);

            var fn_body_idx = str.indexOf('{'),
                fn_body = str.substring(fn_body_idx + 1, str.lastIndexOf('}')),
                fn_declare = str.substring(0, fn_body_idx),
                fn_params = fn_declare.substring(fn_declare.indexOf('(') + 1, fn_declare.lastIndexOf(')')),
                args = fn_params.split(',');

            args.push(fn_body);

            function Fn() {
                return Function.apply(this, args);
            }
            Fn.prototype = Function.prototype;

            return new Fn();
        }

        window.onload = function () {
            var configObject = JSON.parse('{"urls":[{"url":"v1/swagger.json","name":"Ejercicio Sesi\u00F3n 4 v1"}],"deepLinking":false,"persistAuthorization":false,"displayOperationId":false,"defaultModelsExpandDepth":1,"defaultModelExpandDepth":1,"defaultModelRendering":"example","displayRequestDuration":false,"docExpansion":"list","showExtensions":false,"showCommonExtensions":false,"supportedSubmitMethods":["get","put","post","delete","options","head","patch","trace"],"tryItOutEnabled":false}');
            var oauthConfigObject = JSON.parse('{"scopeSeparator":" ","scopes":[],"useBasicAuthenticationWithAccessCodeGrant":false,"usePkceWithAuthorizationCodeGrant":false}');

            // Workaround for https://github.com/swagger-api/swagger-ui/issues/5945
            configObject.urls.forEach(function (item) {
                if (item.url.startsWith("http") || item.url.startsWith("/")) return;
                item.url = window.location.href.replace("index.html", item.url).split('#')[0];
            });

            // If validatorUrl is not explicitly provided, disable the feature by setting to null
            if (!configObject.hasOwnProperty("validatorUrl"))
                configObject.validatorUrl = null

            // If oauth2RedirectUrl isn't specified, use the built-in default
            if (!configObject.hasOwnProperty("oauth2RedirectUrl"))
                configObject.oauth2RedirectUrl = (new URL("oauth2-redirect.html", window.location.href)).href;

            // Apply mandatory parameters
            configObject.dom_id = "#swagger-ui";
            configObject.presets = [SwaggerUIBundle.presets.apis, SwaggerUIStandalonePreset];
            configObject.layout = "StandaloneLayout";

            // Parse and add interceptor functions
            var interceptors = JSON.parse('{"RequestInterceptorFunction":null,"ResponseInterceptorFunction":null}');
            if (interceptors.RequestInterceptorFunction)
                configObject.requestInterceptor = parseFunction(interceptors.RequestInterceptorFunction);
            if (interceptors.ResponseInterceptorFunction)
                configObject.responseInterceptor = parseFunction(interceptors.ResponseInterceptorFunction);

            // Begin Swagger UI call region

            const ui = SwaggerUIBundle(configObject);

            ui.initOAuth(oauthConfigObject);

            // End Swagger UI call region

            window.ui = ui
        }
    </script>
</body>
</html>

::1 - /swagger/v1/swagger.json
{
  "openapi": "3.0.1",
  "info": {
    "title": "Ejercicio Sesi√≥n 4",
    "version": "1.0"
  },
  "paths": {
    "/api/EditorialController/ListEditoriales": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/contiene": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "contiene",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Editorial"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/getEditoriales/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController/editorialeslibrosdto/{id}": {
      "get": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Editorial"
                }
              }
            }
          }
        }
      }
    },
    "/api/EditorialController": {
      "post": {
        "tags": [
          "Editorial"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Editorial"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/editoriallibros": {
      "post": {
        "tags": [
          "Editorial"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DTOEditorialLibro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/Logico/{id}": {
      "delete": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/EditorialController/Restaurar/{id}": {
      "put": {
        "tags": [
          "Editorial"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DTOEditorialLibro": {
        "type": "object",
        "properties": {
          "idEditorial": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "libros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOLibroItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DTOLibroItem": {
        "type": "object",
        "properties": {
          "idLibro": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "paginas": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Editorial": {
        "required": [
          "nombre"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "eliminado": {
            "type": "boolean"
          },
          "libros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Libro"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Libro": {
        "required": [
          "titulo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "titulo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "paginas": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "editorialId": {
            "type": "integer",
            "format": "int32"
          },
          "editorial": {
            "$ref": "#/components/schemas/Editorial"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
::1 - /api/EditorialController/ListEditoriales
[{"id":1,"nombre":"Campbell","eliminado":false,"libros":null},{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null},{"id":3,"nombre":"Graham","eliminado":false,"libros":null},{"id":4,"nombre":"McNaill","eliminado":false,"libros":null}]
::1 - /api/EditorialController/ListEditoriales
[{"id":1,"nombre":"Campbell","eliminado":false,"libros":null},{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null},{"id":3,"nombre":"Graham","eliminado":false,"libros":null},{"id":4,"nombre":"McNaill","eliminado":false,"libros":null}]
::1 - /api/EditorialController/ListEditoriales
[{"id":1,"nombre":"Campbell","eliminado":false,"libros":null},{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null},{"id":3,"nombre":"Graham","eliminado":false,"libros":null},{"id":4,"nombre":"McNaill","eliminado":false,"libros":null}]
::1 - /api/EditorialController/ListEditoriales
[{"id":1,"nombre":"Campbell","eliminado":false,"libros":null},{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null},{"id":3,"nombre":"Graham","eliminado":false,"libros":null},{"id":4,"nombre":"McNaill","eliminado":false,"libros":null}]
::1 - /api/EditorialController/ListEditoriales
[{"id":1,"nombre":"Campbell","eliminado":false,"libros":null},{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null},{"id":3,"nombre":"Graham","eliminado":false,"libros":null},{"id":4,"nombre":"McNaill","eliminado":false,"libros":null}]
::1 - /api/EditorialController/2
{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null}
::1 - /api/EditorialController/1
{"id":1,"nombre":"Campbell","eliminado":false,"libros":null}
::1 - /api/EditorialController/2
{"id":2,"nombre":"Timunmas","eliminado":false,"libros":null}
::1 - /api/EditorialController/1
{"id":1,"nombre":"Campbell","eliminado":false,"libros":null}
